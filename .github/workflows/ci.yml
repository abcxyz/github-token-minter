name: 'ci'

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

env:
  DOCKER_REGISTRY: 'us-docker.pkg.dev'
  DOCKER_TAG: '${{ github.sha }}'
  DOCKER_REPO: 'us-docker.pkg.dev/github-token-minter-i-e4ee94/ci-images'
  IMAGE_NAME: 'github-token-minter-server'
  TAG_ID: 'ci-${{ github.run_id }}-${{ github.run_number }}'
  INTEGRATION_SERVICE_NAME: 'github-token-minter-f779'
  INTEGRATION_SERVICE_AUDIENCE: 'https://github-token-minter-f779-zu5h6wwo4q-uc.a.run.app'
  INTEGRATION_SERVICE_URL: 'https://ci-${{ github.run_id }}-${{ github.run_number }}---github-token-minter-f779-zu5h6wwo4q-uc.a.run.app'
  INTEGRATION_PROJECT_ID: 'github-token-minter-i-e4ee94'
  INTEGRATION_REGION: 'us-central1'

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  # Linting jobs
  terraform_lint:
    uses: 'abcxyz/pkg/.github/workflows/terraform-lint.yml@main' # ratchet:exclude
    with:
      directory: 'terraform'
      terraform_version: '1.7.4'

  go_lint:
    uses: 'abcxyz/pkg/.github/workflows/go-lint.yml@main' # ratchet:exclude

  go_test:
    uses: 'abcxyz/pkg/.github/workflows/go-test.yml@main' # ratchet:exclude

  yaml_lint:
    uses: 'abcxyz/pkg/.github/workflows/yaml-lint.yml@main' # ratchet:exclude

  lint_and_unit:
    runs-on: 'ubuntu-latest'
    needs:
      - 'go_lint'
      - 'go_test'
      - 'terraform_lint'
      - 'yaml_lint'
    steps:
      - run: 'echo prechecks complete'

  # Build the main github-token-minter server and push to artifact registry
  build-github-token-minter-server:
    runs-on: 'ubuntu-latest'
    needs:
      - 'lint_and_unit'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - name: 'Setup Go'
        uses: 'actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491' # ratchet:actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@55bd3a7c6e2ae7cf1877fd1ccb9d54c0503c457c' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - name: 'Authenticate to Artifact Registry'
        uses: 'docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d' # ratchet:docker/login-action@v3
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.DOCKER_REGISTRY }}'
      # goreleaser requires a tag to publish images to container registry.
      # We create a local tag to make it happy.
      - run: |-
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -f `date "+%Y%m%d%H%M%S"`

      - name: 'Build the server container and push to the registry with goreleaser'
        uses: 'goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8' # ratchet:goreleaser/goreleaser-action@v5
        with:
          version: 'v1.12.3' # Manually pinned
          args: 'release -f .goreleaser.docker.yaml --rm-dist --skip-validate'

  build:
    runs-on: 'ubuntu-latest'
    needs:
      - 'build-github-token-minter-server'
    steps:
      - run: 'echo build complete'

  deployment:
    runs-on: 'ubuntu-latest'
    needs:
      - 'build'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@55bd3a7c6e2ae7cf1877fd1ccb9d54c0503c457c' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200' # ratchet:google-github-actions/setup-gcloud@v2

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run services update ${{ env.INTEGRATION_SERVICE_NAME }} \
            --project="${{ env.INTEGRATION_PROJECT_ID }}" \
            --region="${{ env.INTEGRATION_REGION }}" \
            --image="${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}-amd64" \
            --tag="${{ env.TAG_ID }}"

  integration:
    runs-on: 'ubuntu-latest'
    needs:
      - 'deployment'
    permissions:
      contents: 'write'
      packages: 'write'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'mint-token'
        uses: './.github/actions/mint-token'
        with:
          wif_provider: '${{ vars.WIF_PROVIDER }}'
          wif_service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'
          service_audience: '${{ env.INTEGRATION_SERVICE_AUDIENCE }}'
          service_url: '${{ env.INTEGRATION_SERVICE_URL }}'
          requested_permissions: '{"repositories":["github-token-minter"],"permissions":{"issues":"read"}}'

      - name: 'verify'
        run: |
          curl --fail \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ steps.mint-token.outputs.token }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/abcxyz/github-token-minter/issues/events
