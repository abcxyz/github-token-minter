# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'release'

on:
  push:
    branches:
      - 'main'
      - 'release/**/*'

  # Wait for CI to run because we promote the CI images as part of prod.
  workflow_run:
    workflows:
      - 'ci'
    types:
      - 'completed'

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'

env:
  SOURCE_DOCKER_IMAGE: 'us-docker.pkg.dev/github-token-minter-i-e4ee94/ci-images/github-token-minter-server:${{ github.sha }}'

jobs:
  create-release:
    runs-on: 'ubuntu-latest'
    if: |-
      startsWith(github.event.head_commit.message, 'Release: v')
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      release_version: '${{ steps.create-release.outputs.release_version }}'
    steps:
      - name: 'Mint token'
        id: 'mint-token'
        uses: 'abcxyz/github-token-minter/.github/actions/mint-token@main' # ratchet:exclude
        with:
          wif_provider: '${{ vars.TOKEN_MINTER_WIF_PROVIDER }}'
          wif_service_account: '${{ vars.TOKEN_MINTER_WIF_SERVICE_ACCOUNT }}'
          service_audience: '${{ vars.TOKEN_MINTER_SERVICE_AUDIENCE }}'
          service_url: '${{ vars.TOKEN_MINTER_SERVICE_URL }}'
          requested_permissions: |-
            {
              "repositories": ["${{ github.event.repository.name }}"],
              "permissions": {
                "contents": "write"
              }
            }

      - name: 'Create release'
        id: 'create-release'
        uses: 'abcxyz/pkg/.github/actions/create-release@main' # ratchet:exclude
        with:
          github_token: '${{ steps.mint-token.outputs.token }}'
          expected_email: '${{ vars.TOKEN_MINTER_GITHUB_EMAIL }}'

  image-release:
    needs:
      - 'create-release'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Setup QEMU'
        uses: 'docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3' # ratchet:docker/setup-qemu-action@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@a6e2e39c0a0331da29f7fd2c2a20a427e8d3ad1f' # ratchet:google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ vars.WIF_PROVIDER }}'
          service_account: '${{ vars.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - name: 'Authenticate to Artifact Registry'
        uses: 'docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d' # ratchet:docker/login-action@v3
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: 'us-docker.pkg.dev'

      - name: 'Copy images to Release registry'
        env:
          SOURCE_DOCKER_IMAGE: '${{ env.SOURCE_DOCKER_IMAGE }}'
          TARGET_DOCKER_IMAGE: 'us-docker.pkg.dev/abcxyz-artifacts/docker-images/github-token-minter-server:${{ needs.create-release.outputs.release_version }}'
        run: |-
          gcloud container images add-tag --quiet ${SOURCE_DOCKER_IMAGE}-amd64 ${TARGET_DOCKER_IMAGE}-amd64
          gcloud container images add-tag --quiet ${SOURCE_DOCKER_IMAGE}-arm64 ${TARGET_DOCKER_IMAGE}-arm64
