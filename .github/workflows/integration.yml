# Copyright 2023 The Authors (see AUTHORS file)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Test Token Minting'
on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'

env:
  wif_provider: 'projects/576818306874/locations/global/workloadIdentityPools/wif-gh-pool/providers/wif-gh-provider'
  wif_service_account: 'github-token-minter-wif-sa@github-token-minter-dev.iam.gserviceaccount.com'

jobs:
  test:
    permissions:
      contents: 'write'
      packages: 'write'
      id-token: write
    runs-on: 'ubuntu-latest'
    steps:
      - uses: "actions/checkout@v3"

      - uses: "actions/setup-node@v3"
        with:
          node-version: "16"

      - run: npm install node-fetch@v2

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@c4799db9111fba4461e9f9da8732e5057b394f72' # ratchet:google-github-actions/auth@v0
        with:
          workload_identity_provider: '${{ env.wif_provider }}'
          service_account: '${{ env.wif_service_account }}'
          token_format: 'access_token'

      - id: "another-way"
        env:
          token: ${{ steps.auth.outputs.access_token }}
        run: |
          curl -X POST -d'{"repos":["github-token-minter"],"scopes":{"issues":"read"}}' -H "X-GitHub-OIDC-Token: ${{env.token}}" https://github-token-minter-w2nrasvzeq-uc.a.run.app/token

      - id: "token"
        uses: "actions/github-script@v6"
        with:
          result-encoding: "string"
          retries: 3
          script: |-
            try{
              const fetch = require('node-fetch');
              const workflowIdToken = await core.getIDToken()

              const tokenRequest = {
                repos: ['github-token-minter'],
                scopes: {
                  'issues': 'read',
                }
              }

              const tokenResponse = await fetch("https://github-token-minter-w2nrasvzeq-uc.a.run.app/token", {
                method: 'POST',
                headers: {
                  'Accept': `text/plain`,
                  'Authorization': `Bearer ${workflowIdToken}`,
                  'Content-Type': `application/json`
                },
                body: JSON.stringify(tokenRequest)
              })

              const idToken = await tokenResponse.text()
              core.setSecret(idToken)
              return idToken
            }catch(err){
              core.setFailed(`Failed to get id token: ${err}`)
            }

      - uses: "actions/github-script@v6"
        with:
          result-encoding: "string"
          retries: 3
          github-token: "${{ steps.token.outputs.result }}"
          script: |-
            await github.rest.issues.listCommentsForRepo({
              org: '${{ github.repository_owner }}',
              repo: 'github-token-minter',
            });
